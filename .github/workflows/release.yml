name: release
on:
  push:
    branches:
      # - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@v17

      - name: Build
        run: |
          nix develop --command yarn install
          nix develop --command yarn run build

      - name: Prerelease
        if: ${{ ! steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="$(cat package.json | nix run  nixpkgs#jq -- -r .version)-nightly"
          gh release create $VERSION -p --latest=false
          gh release upload $VERSION build/main.js build/styles.css manifest.json

      - name: Release
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} build/main.js build/styles.css manifest.json

